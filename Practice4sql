-- 문제 1
SELECT COUNT(SALARY)
FROM EMPLOYEES
WHERE SALARY < (SELECT AVG(SALARY)
                FROM EMPLOYEES);

-- 문제 2.
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY, ROUND((SELECT AVG(SALARY)FROM EMPLOYEES),2) 평균급여,
        ROUND((SELECT MAX(SALARY)FROM EMPLOYEES),2) 최대급여
FROM EMPLOYEES
GROUP BY EMPLOYEE_ID,FIRST_NAME,SALARY
    HAVING SALARY >= (SELECT AVG(SALARY) FROM EMPLOYEES)
    AND SALARY <= MAX(SALARY)
ORDER BY SALARY;


    
--연관 QUERY를 활용한 QUERY
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.SALARY, t.AVGSALARY, t.MAXSALARY
FROM EMPLOYEES e JOIN (SELECT ROUND(AVG(SALARY),2) AVGSALARY, MAX(SALARY) MAXSALARY 
                        FROM EMPLOYEES) t
ON e.SALARY BETWEEN t.AVGSALARY AND t.MAXSALARY
ORDER BY SALARY;


-- 문제 3.
SELECT l.LOCATION_ID, l.STREET_ADDRESS, l.POSTAL_CODE, l.CITY, l.STATE_PROVINCE,
    l.COUNTRY_ID
FROM LOCATIONS l, DEPARTMENTS d,(SELECT FIRST_NAME, LAST_NAME,DEPARTMENT_ID
                                FROM EMPLOYEES
                                WHERE FIRST_NAME LIKE 'Steven'
                                AND UPPER(LAST_NAME) LIKE 'KING') e
WHERE l.LOCATION_ID = d.LOCATION_ID AND d.DEPARTMENT_ID = e.DEPARTMENT_ID;
-- 혹은


SELECT LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE,COUNTRY_ID
FROM LOCATIONS
WHERE LOCATION_ID = (SELECT LOCATION_ID FROM DEPARTMENTS
                    WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES
                                            WHERE FIRST_NAME = 'Steven' AND
                                                  LAST_NAME = 'King'));


-- 문제 4.
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY < ANY(SELECT SALARY
                    FROM EMPLOYEES
                    WHERE UPPER(JOB_ID) LIKE 'ST_MAN')
ORDER BY SALARY DESC;

-- 문제 5.
-- 조건절 비교
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY,DEPARTMENT_ID
FROM EMPLOYEES
WHERE (DEPARTMENT_ID,SALARY) IN (SELECT DEPARTMENT_ID, MAX(SALARY)
                FROM EMPLOYEES
                GROUP BY DEPARTMENT_ID)
                ;
-- 테이블 조인 비교
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.SALARY, d.DEPARTMENT_ID
FROM EMPLOYEES e , (SELECT DEPARTMENT_ID, MAX(SALARY) sal
                    FROM EMPLOYEES
                    GROUP BY DEPARTMENT_ID) d
WHERE e.DEPARTMENT_ID =  d. DEPARTMENT_ID
AND e. SALARY = d.SAL
ORDER BY SALARY DESC;

-- 문제 6.
SELECT j.JOB_TITLE,SUM(SALARY) 연봉,e.JOB_ID,j.JOB_ID
FROM EMPLOYEES e JOIN JOBS j
ON e.JOB_ID = j.JOB_ID
GROUP BY j.JOB_TITLE,e.JOB_ID,j.JOB_ID
ORDER BY 연봉 DESC;

-- 문제 7. 자신의 부서 평균 급여보다 연봉이 많은 직원을 조회
-- 연관 쿼리 Correlated Query
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES e
WHERE SALARY >ANY (SELECT AVG(SALARY)
                FROM EMPLOYEES d
                WHERE e.DEPARTMENT_ID=d.DEPARTMENT_ID)
ORDER BY SALARY DESC;

-- 테이블 JOIN
SELECT e.EMPLOYEE_ID, e.FIRST_NAME, e.SALARY
FROM EMPLOYEES e JOIN (SELECT DEPARTMENT_ID, AVG(SALARY) SALARY
                        FROM EMPLOYEES
                        GROUP BY DEPARTMENT_ID)d
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE e.SALARY > d.SALARY
ORDER BY SALARY DESC;

-- 문제 8.
SELECT RN,EMPLOYEE_ID, FIRST_NAME, SALARY, HIRE_DATE
FROM (SELECT RANK() OVER(ORDER BY HIRE_DATE) RN,EMPLOYEE_ID,FIRST_NAME,SALARY,HIRE_DATE
        FROM EMPLOYEES)
WHERE RN BETWEEN 11 AND 15;







                
                    